{"version":3,"sources":["app.js","PageService.js","UploadCtrl.js","NavController.js","SlotController.js","FillSlotCtrl.js","EditSlotCtrl.js","SlotService.js","ModuleListCtrl.js","ModuleService.js","TextblockCtrl.js","TextblockService.js","ImageCtrl.js","ImageService.js","CategoryCtrl.js","CategoryService.js","PropertyCtrl.js","PropertyService.js","MessageService.js","ItemCtrl.js","ItemService.js","FormCtrl.js","FormService.js"],"names":[],"mappingslGA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA","file":"all.js","sourcesContent":["var app = angular.module('Cms', [\n    'ui.router',\n    'ngResource',\n    'angular.filter',\n    'ngMessages',\n    'xeditable',\n    'ckeditor',\n    'ngFileUpload',\n    'ngMaterial'\n]);\n\napp.config(function ($interpolateProvider) {\n    $interpolateProvider.startSymbol('[[');\n    $interpolateProvider.endSymbol(']]');\n});\n\napp.config(['$locationProvider', function($locationProvider){\n    $locationProvider.html5Mode(true);\n}]);\n\napp.config(function($stateProvider, $urlRouterProvider) {\n\n    $urlRouterProvider.otherwise('/admin');\n    $stateProvider\n\n        .state('mediamanager', {\n            url: '/admin/mediamanager',\n            views: {\n                '': {\n                    templateUrl: '/cms/mediamanager/views/mediamanager.html',\n                    controller: 'UploadCtrl'\n                }\n            }\n        })\n\n        .state('dashboard', {\n            url: '/admin',\n            views: {\n                '': {\n                    templateUrl: 'cms/dashboard/views/dashboard.html'\n                },\n\n                'nav@dashboard': {\n                    templateUrl: '/cms/dashboard/views/navigation.html',\n                    controller: 'NavController'\n                },\n\n                'slots@dashboard': {\n                    templateUrl: '/cms/slots/views/slot-list.html',\n                    controller: 'SlotController'\n                }\n            }\n        })\n\n        .state('editSlot', {\n\n            url: '/admin/editslot/:pageId/:slotId',\n            views: {\n                '': {\n                    templateUrl: '/cms/slots/views/editslot-wrapper.html'\n                },\n\n                'nav@editSlot': {\n                    templateUrl: '/cms/dashboard/views/navigation.html',\n                    controller: 'NavController'\n                },\n\n                'edit@editSlot': {\n                    templateUrl: '/cms/slots/views/editslot.html',\n                    controller: 'EditSlotCtrl'\n                }\n            }\n        })\n\n        .state('fillslot', {\n            url: '/admin/fillslot/:pageId/:slotId',\n            views: {\n                '': {\n                    templateUrl: '/cms/slots/views/fillslot.html',\n                    controller: 'ModuleListCtrl'\n                }\n            }\n        })\n\n        .state('dashboard.slots', {\n            url: '/:page'\n        })\n\n        .state('editCategory', {\n            url: '/admin/edit/category/:id/:itemId',\n            views: {\n                '': {\n                    templateUrl: '/cms/modules/category/views/edit-properties.html',\n                    controller: 'PropertyCtrl'\n                }\n            }\n        })\n});\n","app.factory('Page', function($resource) {\n    return $resource('api/admin/page/:id', null, {\n        'update': {\n            method: 'PUT'\n        }\n    });\n});","app.controller(\"UploadCtrl\", function($scope, $http, Image, $state, Upload, Image) {\n\n    $scope.getImages = function () {\n        Image.query({}, function(result) {\n            $scope.images = result;\n        });\n    }\n    $scope.getImages();\n\n    $scope.upload = function (files) {\n        console.log($scope.newItemTitle);\n        console.log($scope.newItemTitle);\n        if (files && files.length) {\n            for (var i = 0; i < files.length; i++) {\n                var file = files[i];\n\n                Upload.upload({\n                    url: 'admin/modules/image',\n                    file: file,\n                    title: $scope.newItemTitle\n                }).progress(function (evt) {\n                    var progressPercentage = parseInt(100.0 * evt.loaded / evt.total);\n                    console.log('progress: ' + progressPercentage + '% ' + evt.config.file.name);\n                }).success(function (data, status, headers, config) {\n                    $scope.getImages();\n                });\n            }\n        }\n    };\n\n    $scope.removeImage = function (id) {\n        Image.delete({ id: id }, function() {\n            location.reload();\n        });\n    }\n});\n","app.controller('NavController', function($scope, Page, $state, $stateParams, $http) {\n\n\n    $scope.selectedLanguage = window.localStorage['lang'];\n\n    $http.get('api/admin/shell').success(function(shell) {\n        $scope.menus = shell;\n    });\n\n    $scope.showAddPage = function() {\n        $scope.addpage = true;\n\n        Page.query().$promise.then(function (menus) {\n            $scope.languages = menus;\n        });\n    }\n\n    $scope.createPage = function() {\n        Page.save($scope.page, function(result) {\n            console.log(result);\n        });\n    }\n\n    $scope.changeLang = function () {\n        window.localStorage['lang'] = $scope.selectedLanguage;\n    }\n\n\n});","app.controller('SlotController', function($scope, $state, Slots, $http, $timeout, Messages, Page, $location) {\n\n    $scope.page = $state.params.page;\n    $scope.pageId = $state.params.page;\n\n    $scope.$on('$locationChangeStart', function(event) {\n        $scope.page = $state.params.page;\n        $scope.getPage();\n    });\n\n    $scope.$on('get-slots', function() {\n        $scope.getSlots($scope.page);\n    });\n\n    $scope.getPage = function () {\n        Page.get({id: $scope.page})\n            .$promise.then(function (result) {\n                $scope.getSlots(result.template.name)\n        });\n    }\n\n    $scope.getSlots = function (template) {\n        $http.get('templates/conf/' + template).success(function(config) {\n            $scope.rows = config.backend;\n        });\n        if($scope.page) {\n            $http.post('api/admin/slots', {'pageId': $scope.page}).success(function(result) {\n                $scope.slots = result;\n            })\n        }\n    }\n\n    $scope.getSlots('homepage');\n\n    $http.post('api/admin/templates', $scope.page)\n        .success(function(result) {\n            $scope.pageTemplates = result;\n        });\n\n    $scope.selectTemplateOpen = false;\n\n    $scope.openSelectTemplate = function() {\n        $scope.selectTemplateOpen = true;\n    }\n\n    $scope.selectTemplate = function(pageId, template) {\n        $http.post('admin/edit/changetemplate', {\n            pageId: pageId,\n            templateId: template.id\n        }).success(function(data) {\n            console.log('template changed');\n        });\n    };\n\n    $scope.getSlot = function (row, col, pageId) {\n\n        var self = this;\n        var page = $state.params.page;\n\n        data = {\n            pageId: pageId,\n            row: row,\n            col: col\n        };\n\n        $http.post('api/admin/getSpecSlot', data).success(function(result) {\n            self.slot = result;\n            return self.slot;\n        });\n    }\n\n    $scope.disconnect = function (id) {\n        $http.post('admin/edit/disconnect', {id: id}).success(function(result) {\n            $state.reload();\n        });\n    }\n\n\n});","app.controller(\"FillSlotCtrl\", function($rootScope, $scope, $http, $state, $stateParams, Slots, Modules) {\n\n    $http.post('api/admin/items', {module: $scope.selectedModule}).success(function(data) {\n        $scope.items = data;\n    });\n\n    $scope.selectItem = function () {\n        this.selectExisting();\n    };\n\n    $scope.selectExisting = function () {\n        var dataObject = {\n            pageId: $state.params.pageId,\n            slotId: $state.params.slotId,\n            selectedId: $scope.item.id,\n            module: $scope.selectedModuleId\n        };\n        $http.post('admin/edit/fillslot', dataObject).success(function(data) {\n            $state.go('dashboard.slots', {page: $state.params.pageId});\n        })\n    };\n\n    $scope.save = function () {\n        var dataObject = {\n            slotId: $state.params.slotId,\n            module: $scope.selectedModule,\n            moduleId: $scope.selectedModuleId,\n            title: $scope.nItem.title\n        };\n        $http.post('admin/edit/fillslot', dataObject).success(function(data) {\n            $state.go('dashboard.slots', {page: $state.params.pageId});\n        });\n    }\n});","app.controller(\"EditSlotCtrl\", function($rootScope, $scope, $http, $state, Slots) {\n\n    var slotId = $state.params.slotId;\n\n    $scope.$on('refresh-current', function() {\n        $scope.editSlot();\n    });\n\n    $scope.editSlot = function () {\n        $http.post('admin/edit/slot', {id: slotId}).success(function(result) {\n            $scope.slot = result;\n        });\n    };\n\n    $scope.editSlot();\n});","app.factory('Slots', function($resource) {\n    return $resource('api/admin/slots/:pageid', null, {\n        'update': {\n            method: 'PUT'\n        }\n    });\n});","app.controller(\"ModuleListCtrl\", function($rootScope, $scope, $http, Modules) {\n\n    $scope.selectModule = function (module) {\n        $rootScope.selectedModule = module.name;\n        $rootScope.selectedModuleId = module.id;\n    }\n\n    Modules.query({}, function(data) {\n        $scope.modules = data;\n        console.log($scope.modules);\n    });\n\n});","app.factory('Modules', function($resource) {\n    return $resource('api/admin/modules/:moduleid', null, {\n        'update': {\n            method: 'PUT'\n        }\n    });\n});","app.controller(\"TextblockCtrl\", function($rootScope, $scope, $http, $state, Textblock, $location) {\n\n    var editor = CKEDITOR.replace( 'editor1', {\n        removePlugins: 'forms, flash, smiley, find, wsc, about, specialchar, colordialog',\n        //resize_dir : 'both'\n    });\n    editor.on( 'instanceReady', function( evt ) {\n        evt.editor.insertText();//you can use variable here or server-side tag that will evaluate to string on page load.\n    });\n\n    $scope.textblock = $scope.slot.item;\n\n    $scope.updateTextblock = function (id, module) {\n        Textblock.update({id: id}, {\n            data : {\n                title: $scope.textblock.title,\n                content: CKEDITOR.instances.editor1.getData(),\n            },\n            module: $scope.slot.module.name\n        }).$promise.then(function (result) {\n                $state.go('dashboard.slots', {page: $state.params.pageId});\n            });\n    }\n\n    $scope.selectTemplate = function (moduleSlotId, template) {\n        $http.post('admin/modules/textblock/template', {\n            moduleSlotId: moduleSlotId,\n            template: template.title\n        }).success(function(result) {\n            $state.go('dashboard.slots', {page: $state.params.pageId});\n        });\n    }\n\n    $scope.goback = function () {\n        console.log($state.params);\n        window.location = \"/admin/\" + $state.params.pageId;\n    }\n\n});","app.factory('Textblock', function($resource) {\n    return $resource('admin/modules/textblock/:id', null, {\n        'update': {\n            method: 'PUT'\n        }\n    });\n});","\napp.controller(\"ImageCtrl\", function($rootScope, $scope, $http, $state, Image) {\n\n    $scope.image = $scope.slot.item;\n\n    $scope.getImages = function () {\n        Image.query({}, function(result) {\n            $scope.images = result;\n        });\n    }\n\n    $scope.getImages();\n\n    $scope.$on('get-images', function() {\n        $scope.getImages();\n    });\n\n    $scope.updateImage = function (item, moduleSlotId) {\n\n        $http.post('admin/modules/image/change', {\n            item: item,\n            moduleSlotId: moduleSlotId\n        }).success(function() {\n            $state.go('dashboard.slots', {page: $state.params.pageId});\n        })\n\n    }\n\n    $scope.selectTemplate = function (moduleSlotId, template) {\n        $http.post('admin/modules/textblock/template', {\n            moduleSlotId: moduleSlotId,\n            template: template.title\n        }).success(function(result) {\n            $state.go('dashboard.slots', {page: $state.params.pageId});\n        });\n    }\n\n    $scope.goback = function () {\n        window.location = \"/admin/\" + $state.params.pageId;\n    }\n});","app.factory('Image', function($resource) {\n    return $resource('admin/modules/image/:id', null, {\n        'update': {\n            method: 'PUT'\n        }\n    });\n});","app.controller(\"CategoryCtrl\", function($rootScope, $scope, $http, $state, $location, Category, Item, Messages) {\n\n    $scope.addItem = function (categoryId, itemTemplate) {\n        Item.save({}, {\n            title: $scope.newItem.title,\n            category_id: categoryId,\n            module: 'Item',\n            itemTemplate: itemTemplate\n        }).$promise.then(function (result) {\n                $scope.$emit('refresh-current');\n            }\n        );\n    }\n\n    $scope.selectItem = function (item) {\n        $scope.currentItem = item;\n    }\n\n    $scope.showPropertyCreator = function (item) {\n        $state.go('editCategory', {id: item.category_id, itemId: item.id});\n    }\n\n    $scope.updateProperty = function (currentItem) {\n        console.log(currentItem);\n        $http.post('admin/modules/category/updateProp', $scope.currentItem)\n            .success(function(result) {\n                $scope.message = Messages.save();\n                setTimeout(function () {\n                    console.log(result);\n                    console.log(result);\n                }, 300);\n            });\n    }\n\n    /* Ckeditor options */\n    $scope.options = {\n        language: 'en',\n        allowedContent: true,\n        entities: false,\n        toolbar: 'full',\n        toolbar_full: [\n            { name: 'clipboard', items: [ 'Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo' ] },\n            { name: 'links', items: [ 'Link', 'Unlink', 'Anchor' ] },\n            { name: 'insert', items: [ 'Image', 'Table', 'HorizontalRule', 'SpecialChar' ] },\n            { name: 'tools', items: [ 'Maximize' ] },\n            { name: 'document', items: [ 'Source' ] },\n            '/',\n            { name: 'basicstyles', items: [ 'Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'RemoveFormat' ] },\n            { name: 'paragraph', items: [ 'NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote' ] },\n            { name: 'styles', items: [ 'Styles', 'Format' ] },\n        ]\n    };\n\n    $scope.selectTemplate = function (template) {\n\n        $http.post('admin/modules/category/template', {\n            pageId: $state.params.pageId,\n            template: template.title\n        }).success(function(result) {\n            console.log(result);\n            console.log(result);\n            console.log(result);\n            console.log(result);\n            $state.go('dashboard.slots', {page: $state.params.pageId});\n        });\n    }\n\n});","app.factory('Category', function($resource) {\n    return $resource('admin/modules/category/:id', null, {\n        'update': {\n            method: 'PUT'\n        }\n    });\n});","app.controller(\"PropertyCtrl\", function($rootScope, $scope, $http, $state, Property) {\n\n    $scope.types = [\n        {label: \"checkbox\"},\n        {label: \"text\"},\n        {label: \"textarea\"},\n        {label: \"radio\"},\n        {label: \"image\"},\n    ];\n\n    $scope.getProps = function () {\n        var categoryId = $state.params.id;\n        var itemId = $state.params.itemId;\n\n        $http.get('admin/modules/category/'+ categoryId +'/'+ itemId +'/properties')\n            .success(function(result) {\n                $scope.props = result;\n            })\n    }\n\n    $scope.getProps();\n\n    $scope.addProperty = function (property) {\n\n        if(!$scope.props) {\n            $scope.props = [];\n        }\n\n        $http.post('admin/modules/category/addProperty', {\n            label: property.label.replace(/\\s+/g, ''),\n            type: property.type.label,\n            category_id: $state.params.id\n        }).success(function(result) {\n            $scope.propertyCreator = false;\n        });\n\n        $scope.props.label = $scope.props.push({\n            label: property.label,\n            type: property.type.label\n        });\n\n    }\n\n    $scope.deleteProp = function (prop, idx) {\n        Property.delete({ id: prop.id }, function() {\n            $scope.props.splice(idx, 1);\n        });\n    }\n\n\n});","app.factory('Property', function($resource) {\n    return $resource('admin/modules/property/:id', null, {\n        'update': {\n            method: 'PUT'\n        }\n    });\n});","app.factory('Messages', function($resource) {\n\n    function animate() {\n        $('.message').css('display', 'block');\n\n        setTimeout(function(){\n            $('.message').css('display', 'none');\n        }, 2000);\n    }\n\n    return {\n        save: function() {\n            animate();\n            return 'Opslaan...';\n        }\n    };\n});\n","app.controller(\"ItemCtrl\", function($rootScope, $scope, $http, Item, Image, Messages) {\n\n    $scope.editItem = function () {\n        Item.save($newItem);\n    }\n\n    Image.query({}, function(result) {\n        $scope.images = result;\n    });\n\n    $scope.deleteItem = function (currentItem, index) {\n        var shure = confirm(\"Are u sure u want to delete this item?\");\n\n        if (shure) {\n            Item.delete({ id: currentItem.id }, function() {\n                location.reload();\n            });\n        }\n    }\n});","app.factory('Item', function($resource) {\n    return $resource('admin/modules/items/:id', null, {\n        'update': {\n            method: 'PUT'\n        }\n    });\n});","app.controller(\"FormCtrl\", function($rootScope, $scope, $http, $state, $location, Form) {\n\n    //get form + form items\n\n\n    //add form   label  type   slot itemId\n    //delete form\n\n    Form.get({id: $scope.slot.item.id}, {})\n        .$promise.then(function(result) {\n            $scope.form = result;\n    });\n\n\n    $scope.updateForm = function (id) {\n\n        Form.update({id: id}, {\n            fields: $scope.fields,\n            module: $scope.slot.module.name\n        }).$promise.then(function (result) {\n                angular.forEach(result, function(value, key) {\n                    $scope.form.fields.push(value);\n                });\n        });\n    }\n\n    $scope.submitContactForm = function () {\n\n        if(!$scope.cntct.empty) {\n            $scope.loading = true;\n            $http.post('admin/modules/form/sendContactForm', $scope.cntct)\n                .success(function(data) {\n                    console.log(data);\n                    console.log(data);\n                    $scope.loading = false;\n                })\n        } else {\n            alert('Er is iets mis gegaan.');\n        }\n    }\n\n});","app.factory('Form', function($resource) {\n    return $resource('admin/modules/form/:id', null, {\n        'update': {\n            method: 'PUT'\n        }\n    });\n});"]}